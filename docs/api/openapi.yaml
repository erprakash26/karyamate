openapi: 3.0.0
info:
  title: KaryaMate API
  version: 0.1.0
  description: |
    REST API for KaryaMate Task Manager.
    Includes user authentication and task CRUD operations.

servers:
  - url: http://127.0.0.1:5000/api
    description: Local Development

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      properties:
        message:
          type: string
          example: Invalid request
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        email:
          type: string
          format: email
          example: user@example.com
    Task:
      type: object
      properties:
        id:
          type: integer
          example: 101
        title:
          type: string
          example: Buy groceries
        description:
          type: string
          example: Milk, eggs, bread
        completed:
          type: boolean
          example: false

paths:
  /auth/register:
    post:
      summary: Register a new user
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email: { type: string, example: user@example.com }
                password: { type: string, example: mypassword }
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /auth/login:
    post:
      summary: Log in and receive JWT
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email: { type: string, example: user@example.com }
                password: { type: string, example: mypassword }
      responses:
        '200':
          description: JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token: { type: string, example: <jwt_token> }
                  token_type: { type: string, example: Bearer }

  /tasks:
    get:
      summary: Get all tasks for current user
      tags: [Tasks]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
    post:
      summary: Create a new task
      tags: [Tasks]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title: { type: string }
                description: { type: string }
                completed: { type: boolean }
      responses:
        '201':
          description: Task created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'

  /tasks/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
        description: Task ID
    get:
      summary: Get a single task
      tags: [Tasks]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Task details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Task not found
    put:
      summary: Update a task
      tags: [Tasks]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title: { type: string }
                description: { type: string }
                completed: { type: boolean }
      responses:
        '200':
          description: Task updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Task not found
    delete:
      summary: Delete a task
      tags: [Tasks]
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Task deleted successfully
        '404':
          description: Task not found
